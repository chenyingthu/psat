!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AR	makefile	/^AR = ar$/;"	m
Ac	inc/DAE.h	/^	double *Ac;$/;"	m	class:DAE
Angle	inc/BoundaryNode.h	/^	double *Angle;$/;"	m	class:BoundaryNode
BoundaryNode	inc/BoundaryNode.h	/^class BoundaryNode{$/;"	c
BoundaryNode	src/BoundaryNode.cpp	/^BoundaryNode::BoundaryNode()$/;"	f	class:BoundaryNode
Bp	inc/Line.h	/^	double *Bp;$/;"	m	class:Line
Bpp	inc/Line.h	/^	double *Bpp;$/;"	m	class:Line
Bus	inc/Bus.h	/^class Bus{$/;"	c
Bus	src/Bus.cpp	/^Bus::Bus()$/;"	f	class:Bus
CC	makefile	/^CC = gcc$/;"	m
CFLAGS	makefile	/^CFLAGS = -Wall -fexceptions$/;"	m
CFLAGS_DEBUG	makefile	/^CFLAGS_DEBUG = $(CFLAGS) -g$/;"	m
CXX	makefile	/^CXX = g++$/;"	m
Clpsat	inc/Clpsat.h	/^class Clpsat{$/;"	c
Clpsat	src/Clpsat.cpp	/^Clpsat::Clpsat(){$/;"	f	class:Clpsat
Complex	inc/Psat.h	/^typedef  complex<double> Complex;$/;"	t
DAE	inc/DAE.h	/^class DAE{$/;"	c
DAE	src/DAE.cpp	/^DAE::DAE()$/;"	f	class:DAE
DAEXtox	src/Psat.cpp	/^ void Psat::DAEXtox(){$/;"	f	class:Psat
DAEXtox_2	src/Psat.cpp	/^ void Psat::DAEXtox_2(double *x_in){$/;"	f	class:Psat
DEP_DEBUG	makefile	/^DEP_DEBUG = $/;"	m
Fault	inc/Fault.h	/^class Fault$/;"	c
Fault	src/Fault.cpp	/^Fault::Fault()$/;"	f	class:Fault
Fx	inc/DAE.h	/^	double *Fx;$/;"	m	class:DAE
Fy	inc/DAE.h	/^	double *Fy;$/;"	m	class:DAE
Gmres	inc/Solver.h	/^class Gmres{$/;"	c
Gp	inc/Syn.h	/^	double *Gp;$/;"	m	class:Syn
Gq	inc/Syn.h	/^	double *Gq;$/;"	m	class:Syn
Gx	inc/DAE.h	/^	double *Gx;$/;"	m	class:DAE
INC	makefile	/^INC = $/;"	m
INC_DEBUG	makefile	/^INC_DEBUG = $(INC) -I..\/..\/..\/下载\/software\/lapack-3.4.2\/lapacke\/include -I..\/..\/..\/下载\/software\/lapack-3.4.2\/CBLAS\/include -Iinc$/;"	m
Id	inc/Syn.h	/^	double *Id;$/;"	m	class:Syn
Iq	inc/Syn.h	/^	double *Iq;$/;"	m	class:Syn
J11	inc/DAE.h	/^	double *J11;$/;"	m	class:DAE
J11	inc/Syn.h	/^	double *J11;$/;"	m	class:Syn
J12	inc/DAE.h	/^	double *J12;$/;"	m	class:DAE
J12	inc/Syn.h	/^	double *J12;$/;"	m	class:Syn
J21	inc/DAE.h	/^	double *J21;$/;"	m	class:DAE
J21	inc/Syn.h	/^	double *J21;$/;"	m	class:Syn
J22	inc/DAE.h	/^	double *J22;$/;"	m	class:DAE
J22	inc/Syn.h	/^	double *J22;$/;"	m	class:Syn
Jfng	inc/Solver.h	/^class Jfng{$/;"	c
Jlf	inc/DAE.h	/^	double *Jlf;$/;"	m	class:DAE
Jlfd	inc/DAE.h	/^	double *Jlfd;$/;"	m	class:DAE
Jlfv	inc/DAE.h	/^	double *Jlfv;$/;"	m	class:DAE
LD	makefile	/^LD = g++$/;"	m
LDFLAGS	makefile	/^LDFLAGS = $/;"	m
LDFLAGS_DEBUG	makefile	/^LDFLAGS_DEBUG = $(LDFLAGS)$/;"	m
LIB	makefile	/^LIB = $/;"	m
LIBDIR	makefile	/^LIBDIR = $/;"	m
LIBDIR_DEBUG	makefile	/^LIBDIR_DEBUG = $(LIBDIR) -L..\/..\/..\/下载\/software\/lapack-3.4.2\/CBLAS\/lib$/;"	m
LIB_DEBUG	makefile	/^LIB_DEBUG = $(LIB)..\/..\/..\/下载\/software\/lapack-3.4.2\/CBLAS\/lib\/cblas_LINUX.a ..\/..\/..\/下载\/software\/lapack-3.4.2\/liblapacke.a ..\/..\/..\/下载\/software\/lapack-3.4.2\/libtmglib.a ..\/..\/..\/下载\/software\/lapack-3.4.2\/liblapack.a ..\/..\/..\/下载\/software\/lapack-3.4.2\/librefblas.a -lgfortran$/;"	m
Line	inc/Line.h	/^class Line{$/;"	c
Line	src/Line.cpp	/^Line::Line()$/;"	f	class:Line
Mn	inc/Mn.h	/^class Mn{$/;"	c
Mn	src/Mn.cpp	/^Mn::Mn(){$/;"	f	class:Mn
Mndelete	src/Mn.cpp	/^void Mn::Mndelete(int _n){$/;"	f	class:Mn
Mninit	src/Mn.cpp	/^void Mn::Mninit(int _n){$/;"	f	class:Mn
MyDgemv	lib/myLib.cpp	/^void MyDgemv(int Trans,int A_row,int A_col,double alpha,double *A,int lda,double *b,int inc_b,double beta,double *c,int inc_c){$/;"	f
Newton	inc/Solver.h	/^class Newton{$/;"	c
OBJDIR_DEBUG	makefile	/^OBJDIR_DEBUG = obj\/Debug$/;"	m
OBJ_DEBUG	makefile	/^OBJ_DEBUG = $(OBJDIR_DEBUG)\/src\/PV.o $(OBJDIR_DEBUG)\/src\/BoundaryNode.o $(OBJDIR_DEBUG)\/src\/Bus.o $(OBJDIR_DEBUG)\/src\/Clpsat.o $(OBJDIR_DEBUG)\/src\/DAE.o $(OBJDIR_DEBUG)\/src\/Fault.o $(OBJDIR_DEBUG)\/src\/Line.o $(OBJDIR_DEBUG)\/src\/Mn.o $(OBJDIR_DEBUG)\/src\/PQ.o $(OBJDIR_DEBUG)\/src\/Psat.o $(OBJDIR_DEBUG)\/src\/SW.o $(OBJDIR_DEBUG)\/src\/Settings.o $(OBJDIR_DEBUG)\/src\/Shunt.o $(OBJDIR_DEBUG)\/src\/Syn.o $(OBJDIR_DEBUG)\/src\/Varout.o $(OBJDIR_DEBUG)\/src\/main.o $(OBJDIR_DEBUG)\/lib\/myLib.o$/;"	m
OBJ_RELEASE	makefile	/^OBJ_RELEASE = $(OBJDIR_RELEASE)\/src\/PV.o $(OBJDIR_RELEASE)\/src\/BoundaryNode.o $(OBJDIR_RELEASE)\/src\/Bus.o $(OBJDIR_RELEASE)\/src\/Clpsat.o $(OBJDIR_RELEASE)\/src\/DAE.o $(OBJDIR_RELEASE)\/src\/Fault.o $(OBJDIR_RELEASE)\/src\/Line.o $(OBJDIR_RELEASE)\/src\/Mn.o $(OBJDIR_RELEASE)\/src\/PQ.o $(OBJDIR_RELEASE)\/src\/Psat.o $(OBJDIR_RELEASE)\/src\/SW.o $(OBJDIR_RELEASE)\/src\/Settings.o $(OBJDIR_RELEASE)\/src\/Shunt.o $(OBJDIR_RELEASE)\/src\/Syn.o $(OBJDIR_RELEASE)\/src\/Varout.o $(OBJDIR_RELEASE)\/src\/main.o $(OBJDIR_RELEASE)\/lib\/myLib.o$/;"	m
OUT_DEBUG	makefile	/^OUT_DEBUG = bin\/Debug\/psat$/;"	m
P	inc/BoundaryNode.h	/^	double *P;$/;"	m	class:BoundaryNode
P	inc/Solver.h	/^  double *P;$/;"	m	class:Solver
P0	inc/PQ.h	/^	double *P0;$/;"	m	class:PQ
PQ	inc/PQ.h	/^class PQ$/;"	c
PQ	src/PQ.cpp	/^PQ::PQ()$/;"	f	class:PQ
PV	inc/PV.h	/^class PV$/;"	c
PV	src/PV.cpp	/^PV::PV()$/;"	f	class:PV
Pg	inc/Bus.h	/^	double *Pg;$/;"	m	class:Bus
Pg	inc/Syn.h	/^	double *Pg;$/;"	m	class:Syn
Pl	inc/Bus.h	/^	double *Pl;$/;"	m	class:Bus
Pm	inc/Varout.h	/^	double *Pm;$/;"	m	class:Varout
Precond	inc/Solver.h	/^class Precond{$/;"	c
Psat	inc/Psat.h	/^class Psat{$/;"	c
Psat	src/Psat.cpp	/^Psat::Psat(){$/;"	f	class:Psat
Q	inc/BoundaryNode.h	/^	double *Q;$/;"	m	class:BoundaryNode
Q0	inc/PQ.h	/^	double *Q0;$/;"	m	class:PQ
Qg	inc/Bus.h	/^	double *Qg;$/;"	m	class:Bus
Qg	inc/Syn.h	/^	double *Qg;$/;"	m	class:Syn
Ql	inc/Bus.h	/^	double *Ql;$/;"	m	class:Bus
RCFLAGS_DEBUG	makefile	/^RCFLAGS_DEBUG = $(RCFLAGS)$/;"	m
RECORD_HEADER	inc/Record.h	5;"	d
RESINC	makefile	/^RESINC = $/;"	m
RESINC_DEBUG	makefile	/^RESINC_DEBUG = $(RESINC) -I..\/..\/..\/下载\/software\/lapack-3.4.2\/CBLAS\/src -I..\/..\/..\/下载\/software\/lapack-3.4.2\/SRC$/;"	m
Record	inc/Record.h	/^class Record{$/;"	c
SIMU_HEADER	inc/Simu.h	5;"	d
SOLVER_HEADER	inc/Solver.h	5;"	d
SW	inc/SW.h	/^class SW{$/;"	c
SW	src/SW.cpp	/^SW::SW()$/;"	f	class:SW
Settings	inc/settings.h	/^class Settings {$/;"	c
Settings	src/Settings.cpp	/^Settings::Settings()$/;"	f	class:Settings
Shunt	inc/Shunt.h	/^class Shunt{$/;"	c
Shunt	src/Shunt.cpp	/^Shunt::Shunt()$/;"	f	class:Shunt
Shuntdelete	src/Shunt.cpp	/^void Shunt::Shuntdelete(int _n)$/;"	f	class:Shunt
Simu	inc/Simu.h	/^class Simu{$/;"	c
Solver	inc/Solver.h	/^class Solver{$/;"	c
Syn	inc/Syn.h	/^class Syn$/;"	c
Syn	src/Syn.cpp	/^Syn::Syn()$/;"	f	class:Syn
Update	inc/Solver.h	/^class Update{$/;"	c
V	inc/DAE.h	/^	double *V;$/;"	m	class:DAE
V	inc/Fault.h	/^	double *V;$/;"	m	class:Fault
V	inc/Varout.h	/^	double *V;$/;"	m	class:Varout
V_bak	inc/Psat.h	/^	double *V_bak;$/;"	m	class:Psat
Varout	inc/Varout.h	/^class Varout$/;"	c
Varout	src/Varout.cpp	/^Varout::Varout(){$/;"	f	class:Varout
Vf	inc/Varout.h	/^	double *Vf;$/;"	m	class:Varout
Voltage	inc/BoundaryNode.h	/^	double *Voltage;$/;"	m	class:BoundaryNode
WINDRES	makefile	/^WINDRES = windres$/;"	m
WORKDIR	makefile	/^WORKDIR = `pwd`$/;"	m
X	inc/DAE.h	/^	double *X;$/;"	m	class:DAE
Y	inc/Line.h	/^	complex<double> *Y;$/;"	m	class:Line
_BOUNDARYNODE_H	inc/BoundaryNode.h	2;"	d
_BUS_H	inc/Bus.h	2;"	d
_CLPSAT_H	inc/Clpsat.h	2;"	d
_DAE_H	inc/DAE.h	2;"	d
_FAULT_H	inc/Fault.h	2;"	d
_LINE_H	inc/Line.h	2;"	d
_MN_H	inc/Mn.h	2;"	d
_MYLIB_H	lib/myLib.h	2;"	d
_PQ_H	inc/PQ.h	2;"	d
_PSAT_H	inc/Psat.h	2;"	d
_PV_H	inc/PV.h	2;"	d
_SETTINGS_H	inc/settings.h	2;"	d
_SHUNT_H	inc/Shunt.h	2;"	d
_SW_H	inc/SW.h	2;"	d
_SYN_H	inc/Syn.h	2;"	d
_VAROUT_H	inc/Varout.h	2;"	d
a	inc/DAE.h	/^	double *a;$/;"	m	class:DAE
absvalues	inc/settings.h	/^	int absvalues;$/;"	m	class:Settings
alpha	inc/Psat.h	/^	complex<double>alpha;$/;"	m	class:Psat
ang	inc/Fault.h	/^	double *ang;$/;"	m	class:Fault
ang	inc/Varout.h	/^	double *ang;$/;"	m	class:Varout
b	inc/Shunt.h	/^	double *b;$/;"	m	class:Shunt
beep	inc/settings.h	/^	int beep;$/;"	m	class:Settings
beta	inc/Psat.h	/^	complex<double>beta;$/;"	m	class:Psat
bnode	inc/BoundaryNode.h	/^	int *bnode;$/;"	m	class:BoundaryNode
boundaryNodeDelete	src/BoundaryNode.cpp	/^void BoundaryNode::boundaryNodeDelete()$/;"	f	class:BoundaryNode
boundarynode	inc/Psat.h	/^	BoundaryNode boundarynode;$/;"	m	class:Psat
bs2	inc/Syn.h	/^	int *bs2;$/;"	m	class:Syn
bs3	inc/Syn.h	/^	int *bs3;$/;"	m	class:Syn
bs4	inc/Syn.h	/^	int *bs4;$/;"	m	class:Syn
bs51	inc/Syn.h	/^	int *bs51;$/;"	m	class:Syn
bs52	inc/Syn.h	/^	int *bs52;$/;"	m	class:Syn
bs53	inc/Syn.h	/^	int *bs53;$/;"	m	class:Syn
bs6	inc/Syn.h	/^	int *bs6;$/;"	m	class:Syn
bs8	inc/Syn.h	/^	int *bs8;$/;"	m	class:Syn
bus	inc/Fault.h	/^	int *bus;$/;"	m	class:Fault
bus	inc/Mn.h	/^	int *bus;$/;"	m	class:Mn
bus	inc/PQ.h	/^	int *bus;$/;"	m	class:PQ
bus	inc/PV.h	/^	int *bus;$/;"	m	class:PV
bus	inc/Psat.h	/^	Bus bus;$/;"	m	class:Psat
bus	inc/SW.h	/^	int *bus;$/;"	m	class:SW
bus	inc/Shunt.h	/^	int *bus;$/;"	m	class:Shunt
bus	inc/Syn.h	/^	int *bus;$/;"	m	class:Syn
busDelete	src/Bus.cpp	/^void Bus::busDelete(){$/;"	f	class:Bus
c	inc/Solver.h	/^  double *c;$/;"	m	class:Gmres
c1	inc/Syn.h	/^	double *c1;$/;"	m	class:Syn
c2	inc/Syn.h	/^	double *c2;$/;"	m	class:Syn
c3	inc/Syn.h	/^	double *c3;$/;"	m	class:Syn
cat4matrix	lib/myLib.cpp	/^void cat4matrix(double *A,int na,int ma,double *B,int nb,int mb,double *C,int nc,int mc,double *D,int nd,int md,double *Result)$/;"	f
cat4matrix_Ac	lib/myLib.cpp	/^void cat4matrix_Ac(double *A,int na,int ma,double *B,int nb,int mb,double *C,int nc,int mc,double *D,int nd,int md,double *Result,double h)$/;"	f
check	src/Bus.cpp	/^int Bus::check()$/;"	f	class:Bus
check	src/DAE.cpp	/^int DAE::check(Bus bus)$/;"	f	class:DAE
check	src/Fault.cpp	/^int Fault::check(Bus _bus)$/;"	f	class:Fault
check	src/Line.cpp	/^int Line::check(Settings settings){$/;"	f	class:Line
check	src/Mn.cpp	/^void Mn::check(Bus _bus){$/;"	f	class:Mn
check	src/PQ.cpp	/^int PQ::check(Bus _bus ,Clpsat clpsat)$/;"	f	class:PQ
check	src/PV.cpp	/^int PV::check(Bus _bus,Clpsat clpsat,DAE dae){$/;"	f	class:PV
check	src/SW.cpp	/^int SW::check(Bus _bus){$/;"	f	class:SW
check	src/Shunt.cpp	/^void Shunt::check(Bus _bus,Settings settings)$/;"	f	class:Shunt
check	src/Syn.cpp	/^int Syn::check(Bus _bus)$/;"	f	class:Syn
check_2	src/DAE.cpp	/^int DAE::check_2(SW sw)$/;"	f	class:DAE
chunk	inc/settings.h	/^	int chunk;$/;"	m	class:Settings
clpsat	inc/Psat.h	/^	Clpsat clpsat;$/;"	m	class:Psat
cmp	lib/myLib.cpp	/^int cmp(const void *a, const void *b)$/;"	f
cmpD	lib/myLib.cpp	/^int cmpD(const void * a, const void * b)$/;"	f
color	inc/settings.h	/^	int color;$/;"	m	class:Settings
con	inc/Bus.h	/^	double **con;$/;"	m	class:Bus
con	inc/Fault.h	/^	double **con;$/;"	m	class:Fault
con	inc/Line.h	/^	double **con;$/;"	m	class:Line
con	inc/Mn.h	/^	double **con;$/;"	m	class:Mn
con	inc/PQ.h	/^	double **con;$/;"	m	class:PQ
con	inc/PV.h	/^	double **con;$/;"	m	class:PV
con	inc/SW.h	/^	double **con;$/;"	m	class:SW
con	inc/Shunt.h	/^	double **con;$/;"	m	class:Shunt
con	inc/Syn.h	/^	double **con;$/;"	m	class:Syn
conj	lib/myLib.cpp	/^complex<double> conj(complex<double>a)$/;"	f
conj_	lib/myLib.cpp	/^complex<double> *conj_(int n,complex<double>*a)$/;"	f
conv	inc/settings.h	/^	int conv;$/;"	m	class:Settings
converged	inc/Simu.h	/^  int converged;$/;"	m	class:Simu
dac	inc/settings.h	/^	int dac;$/;"	m	class:Settings
dae	inc/Psat.h	/^	DAE dae;$/;"	m	class:Psat
daeDelete	src/DAE.cpp	/^void DAE::daeDelete()$/;"	f	class:DAE
dat	inc/Fault.h	/^	double *dat;$/;"	m	class:Fault
debug	inc/Solver.h	/^  int debug;$/;"	m	class:Newton
debug	src/Psat.cpp	/^void Psat::debug(char* str,int n,double *a)$/;"	f	class:Psat
deleteVarout	src/Varout.cpp	/^void Varout::deleteVarout(){$/;"	f	class:Varout
delta	inc/Fault.h	/^	double delta;$/;"	m	class:Fault
delta	inc/Syn.h	/^	double *delta;$/;"	m	class:Syn
delta_idx	inc/Syn.h	/^	int *delta_idx;$/;"	m	class:Syn
deltamax	inc/settings.h	/^	double deltamax;$/;"	m	class:Settings
deltamin	inc/settings.h	/^	double deltamin;$/;"	m	class:Settings
deltat	inc/settings.h	/^	double deltat;$/;"	m	class:Settings
deltx	inc/Solver.h	/^  double *deltx;$/;"	m	class:Solver
delty	inc/Solver.h	/^  double *delty;$/;"	m	class:Solver
dest	inc/Solver.h	/^  int dest;$/;"	m	class:Update
dirder	src/Psat.cpp	/^void Psat::dirder(double *x,double *w,double *f0,double *z){$/;"	f	class:Psat
distrsw	inc/settings.h	/^	int distrsw;$/;"	m	class:Settings
dyn_MulStep_nSteps	inc/settings.h	/^	int dyn_MulStep_nSteps;$/;"	m	class:Settings
dyn_f_dae	src/Psat.cpp	/^double * Psat::dyn_f_dae(double *x_in,double t0)\/\/todo multiSteps$/;"	f	class:Psat
dyn_f_dealFaults	src/Psat.cpp	/^void Psat::dyn_f_dealFaults(int iFalg){$/;"	f	class:Psat
dyn_f_increaseTimeSteps	src/Psat.cpp	/^void Psat::dyn_f_increaseTimeSteps(int iFlag){$/;"	f	class:Psat
dyn_f_iniDae	src/Psat.cpp	/^void Psat::dyn_f_iniDae(int iFlag){$/;"	f	class:Psat
dyn_f_iniNet	src/Psat.cpp	/^void Psat::dyn_f_iniNet(int iFlag){$/;"	f	class:Psat
dyn_f_iniSimu	src/Psat.cpp	/^void Psat::dyn_f_iniSimu(int iFlag){$/;"	f	class:Psat
dyn_f_iniSolver	src/Psat.cpp	/^void Psat::dyn_f_iniSolver(int iFlag){$/;"	f	class:Psat
dyn_f_iniSyn	src/Psat.cpp	/^void Psat::dyn_f_iniSyn(int iFlag){$/;"	f	class:Psat
dyn_f_integration	src/Psat.cpp	/^void Psat::dyn_f_integration(int iFlag){$/;"	f	class:Psat
dyn_f_prediction	src/Psat.cpp	/^void Psat::dyn_f_prediction(int iFlag){\/\/to do multsteps,...$/;"	f	class:Psat
dyn_f_store	src/Psat.cpp	/^ void Psat::dyn_f_store(int iFlag){$/;"	f	class:Psat
dyn_isMulStep	inc/settings.h	/^	int dyn_isMulStep;$/;"	m	class:Settings
dyn_isPredict	inc/settings.h	/^	int dyn_isPredict;$/;"	m	class:Settings
dyn_lf	inc/settings.h	/^	int dyn_lf;$/;"	m	class:Settings
dyn_main	src/main.cpp	/^int dyn_main(int iFlag,int sys,int isPredict,int model,int isMultStep,int nSteps,double tStep){$/;"	f
dyn_predict_model	inc/settings.h	/^	int dyn_predict_model;$/;"	m	class:Settings
dyn_tStep	inc/settings.h	/^	double dyn_tStep;$/;"	m	class:Settings
dyn_tStep_max	inc/settings.h	/^	double dyn_tStep_max;$/;"	m	class:Settings
dyn_tStep_min	inc/settings.h	/^	double dyn_tStep_min;$/;"	m	class:Settings
dynmit	inc/settings.h	/^	int dynmit;$/;"	m	class:Settings
dyntol	inc/settings.h	/^	double dyntol;$/;"	m	class:Settings
e1d	inc/Syn.h	/^	double *e1d;$/;"	m	class:Syn
e1d_idx	inc/Syn.h	/^	int *e1d_idx;$/;"	m	class:Syn
e1q	inc/Syn.h	/^	double *e1q;$/;"	m	class:Syn
e1q_idx	inc/Syn.h	/^	int *e1q_idx;$/;"	m	class:Syn
e2d	inc/Syn.h	/^	double *e2d;$/;"	m	class:Syn
e2d_idx	inc/Syn.h	/^	int *e2d_idx;$/;"	m	class:Syn
e2q	inc/Syn.h	/^	double *e2q;$/;"	m	class:Syn
e2q_idx	inc/Syn.h	/^	int *e2q_idx;$/;"	m	class:Syn
errstep	inc/Psat.h	/^	double errstep;$/;"	m	class:Psat
exportType	inc/settings.h	/^	char exportType[20];$/;"	m	class:Settings
f	inc/DAE.h	/^	double *f;$/;"	m	class:DAE
f	inc/Record.h	/^  double *f;$/;"	m	class:Record
f	inc/Varout.h	/^	double *f;$/;"	m	class:Varout
fault	inc/Psat.h	/^	Fault fault;$/;"	m	class:Psat
faultDelete	src/Fault.cpp	/^void Fault::faultDelete()$/;"	f	class:Fault
find	lib/myLib.cpp	/^int find(double *srcArray,int len,double ref,int *dstArray)$/;"	f
findi	lib/myLib.cpp	/^int findi(int *srcArray,int len,int ref,int *dstArray)$/;"	f
findiff	inc/Solver.h	/^  double findiff;$/;"	m	class:Jfng
fixt	inc/settings.h	/^	int fixt;$/;"	m	class:Settings
fm_base_line	src/Psat.cpp	/^void Psat::fm_base_line(){$/;"	f	class:Psat
fm_base_mn	src/Psat.cpp	/^void Psat::fm_base_mn(){$/;"	f	class:Psat
fm_base_pq	src/Psat.cpp	/^void Psat::fm_base_pq(){$/;"	f	class:Psat
fm_base_pv	src/Psat.cpp	/^void Psat::fm_base_pv(){$/;"	f	class:Psat
fm_base_sw	src/Psat.cpp	/^void Psat::fm_base_sw(){$/;"	f	class:Psat
fm_base_syn	src/Psat.cpp	/^void Psat::fm_base_syn(){$/;"	f	class:Psat
fm_dynidx	src/Psat.cpp	/^void Psat::fm_dynidx(){$/;"	f	class:Psat
fm_dynidx	src/Syn.cpp	/^int Syn::fm_dynidx(DAE dae)$/;"	f	class:Syn
fm_dynlf	src/Psat.cpp	/^void Psat::fm_dynlf(){}$/;"	f	class:Psat
fm_excin	src/Psat.cpp	/^void Psat::fm_excin(){}$/;"	f	class:Psat
fm_fault	src/Psat.cpp	/^void Psat::fm_fault(int flag,double t){}$/;"	f	class:Psat
fm_fault_0	src/Psat.cpp	/^void Psat::fm_fault_0(double t){$/;"	f	class:Psat
fm_fault_1	src/Psat.cpp	/^void Psat::fm_fault_1(double t){$/;"	f	class:Psat
fm_int_dyn	src/Psat.cpp	/^void Psat::fm_int_dyn(double t0,double tf,double h){$/;"	f	class:Psat
fm_int_intial	src/Psat.cpp	/^  void Psat::fm_int_intial(){$/;"	f	class:Psat
fm_int_step	src/Psat.cpp	/^void Psat::fm_int_step(double t,double h,double *tempi,int k){$/;"	f	class:Psat
fm_lf_1	src/Psat.cpp	/^ void Psat::fm_lf_1(){$/;"	f	class:Psat
fm_lf_2	src/Psat.cpp	/^void Psat::fm_lf_2(){$/;"	f	class:Psat
fm_mn_0	src/Psat.cpp	/^void Psat::fm_mn_0(){}$/;"	f	class:Psat
fm_mn_1	src/Psat.cpp	/^ void Psat::fm_mn_1(){$/;"	f	class:Psat
fm_mn_2	src/Psat.cpp	/^void Psat::fm_mn_2(){$/;"	f	class:Psat
fm_ncomp	src/Psat.cpp	/^int Psat::fm_ncomp(){$/;"	f	class:Psat
fm_nrlf	src/Psat.cpp	/^ int Psat::fm_nrlf(int iter_max,double tol){$/;"	f	class:Psat
fm_out_0	src/Psat.cpp	/^void Psat::fm_out_0(double t,int k){$/;"	f	class:Psat
fm_out_1	src/Psat.cpp	/^void Psat::fm_out_1(double t,int k){}$/;"	f	class:Psat
fm_out_2	src/Psat.cpp	/^void Psat::fm_out_2(double t,int k){$/;"	f	class:Psat
fm_out_3	src/Psat.cpp	/^void Psat::fm_out_3(double t,int k){}$/;"	f	class:Psat
fm_pq_1	src/Psat.cpp	/^ void Psat::fm_pq_1(){$/;"	f	class:Psat
fm_pq_2	src/Psat.cpp	/^ void Psat::fm_pq_2(){$/;"	f	class:Psat
fm_pv_1	src/Psat.cpp	/^ void Psat::fm_pv_1(){$/;"	f	class:Psat
fm_pv_2	src/Psat.cpp	/^void Psat::fm_pv_2(){$/;"	f	class:Psat
fm_spf	src/Psat.cpp	/^ void Psat::fm_spf(){$/;"	f	class:Psat
fm_sw_1	src/Psat.cpp	/^ void Psat::fm_sw_1(){$/;"	f	class:Psat
fm_sw_2	src/Psat.cpp	/^void Psat::fm_sw_2(){$/;"	f	class:Psat
fm_syn	src/Psat.cpp	/^ void Psat::fm_syn(int flag){$/;"	f	class:Psat
fm_syn1	src/Psat.cpp	/^  void Psat::fm_syn1(int flag){$/;"	f	class:Psat
fm_syn2	src/Psat.cpp	/^  void Psat::fm_syn2(int flag){$/;"	f	class:Psat
fm_syn3	src/Psat.cpp	/^  void Psat::fm_syn3(int flag){$/;"	f	class:Psat
fm_syn4	src/Psat.cpp	/^  void Psat::fm_syn4(int flag){$/;"	f	class:Psat
fm_synit	src/PV.cpp	/^void PV::fm_synit(int _n,int *_bus){$/;"	f	class:PV
fm_synit	src/Psat.cpp	/^void Psat::fm_synit(){$/;"	f	class:Psat
fm_synit	src/SW.cpp	/^void SW::fm_synit(int _n,int *_bus){$/;"	f	class:SW
fm_synit	src/Syn.cpp	/^void Syn::fm_synit(Settings settings,DAE dae,Bus _bus){$/;"	f	class:Syn
fm_synit_mod2	src/Syn.cpp	/^void Syn::fm_synit_mod2(int is2_n,int *is2,double *vd,double *vq){$/;"	f	class:Syn
fm_synit_mod3	src/Syn.cpp	/^void Syn::fm_synit_mod3(int is3_n,int *is3,double *vd,double *vq,DAE dae){$/;"	f	class:Syn
fm_synit_mod4	src/Syn.cpp	/^void Syn::fm_synit_mod4(int is4_n,int *is4,double *vd,double *vq,DAE dae){$/;"	f	class:Syn
fm_synit_mod51	src/Syn.cpp	/^void Syn::fm_synit_mod51(int is51_n,int *is51,double *vd,double *vq){$/;"	f	class:Syn
fm_synit_mod52	src/Syn.cpp	/^void Syn::fm_synit_mod52(int is52_n,int *is52,double *vd,double *vq){$/;"	f	class:Syn
fm_synit_mod53	src/Syn.cpp	/^void Syn::fm_synit_mod53(int is53_n,int *is53,double *vd,double *vq){$/;"	f	class:Syn
fm_synit_mod6	src/Syn.cpp	/^void Syn::fm_synit_mod6(int is6_n,int *is6,double *vd,double *vq){$/;"	f	class:Syn
fm_synit_mod8	src/Syn.cpp	/^void Syn::fm_synit_mod8(int is8_n,int *is8,double *vd,double *vq){$/;"	f	class:Syn
fm_tstep	src/Psat.cpp	/^double Psat:: fm_tstep(int flag,int convergency,int iteration,double t){$/;"	f	class:Psat
fm_tstep_1	src/Psat.cpp	/^void Psat::fm_tstep_1(int convergency,int iteration,double t){$/;"	f	class:Psat
fm_tstep_2	src/Psat.cpp	/^void Psat::fm_tstep_2(int convergency,int iteration,double t){}$/;"	f	class:Psat
fm_y	src/Psat.cpp	/^void Psat::fm_y(){$/;"	f	class:Psat
fm_y_line	src/Line.cpp	/^void Line::fm_y_line(int nodes,Shunt shunt)$/;"	f	class:Line
formConMatrix	src/Psat.cpp	/^void Psat::formConMatrix(){$/;"	f	class:Psat
formDAEX	src/Psat.cpp	/^ void Psat::formDAEX(){$/;"	f	class:Psat
freq	inc/settings.h	/^	double freq;$/;"	m	class:Settings
from	inc/Line.h	/^	int *from;$/;"	m	class:Line
g	inc/DAE.h	/^	double *g;$/;"	m	class:DAE
g	inc/Shunt.h	/^	double *g;$/;"	m	class:Shunt
givapp	src/Psat.cpp	/^void Psat::givapp(double *c,double *s,double *vin,int k){$/;"	f	class:Psat
glfp	inc/DAE.h	/^	double *glfp;$/;"	m	class:DAE
glfq	inc/DAE.h	/^	double *glfq;$/;"	m	class:DAE
gmres	inc/Solver.h	/^  Gmres gmres;$/;"	m	class:Jfng
gp	inc/DAE.h	/^	double *gp;$/;"	m	class:DAE
gq	inc/DAE.h	/^	double *gq;$/;"	m	class:DAE
h	inc/Solver.h	/^  double *h;$/;"	m	class:Gmres
indexAll	inc/BoundaryNode.h	/^	int *indexAll;$/;"	m	class:BoundaryNode
indexG	inc/BoundaryNode.h	/^	int *indexG;$/;"	m	class:BoundaryNode
init	inc/Clpsat.h	/^	int init;$/;"	m	class:Clpsat
init	inc/Mn.h	/^	int *init;$/;"	m	class:Mn
init	inc/settings.h	/^	int init;$/;"	m	class:Settings
init	src/BoundaryNode.cpp	/^void BoundaryNode::init(int bus_n,int dae_n)$/;"	f	class:BoundaryNode
init	src/Bus.cpp	/^void Bus::init()$/;"	f	class:Bus
init	src/Fault.cpp	/^void Fault::init()$/;"	f	class:Fault
init	src/Line.cpp	/^void Line::init(int nodes)$/;"	f	class:Line
init	src/PQ.cpp	/^void PQ::init()$/;"	f	class:PQ
init	src/PV.cpp	/^void PV::init()$/;"	f	class:PV
init	src/Psat.cpp	/^void Psat::init(){$/;"	f	class:Psat
init	src/SW.cpp	/^void SW::init()$/;"	f	class:SW
init	src/Shunt.cpp	/^void Shunt::init(int _n){$/;"	f	class:Shunt
init	src/Syn.cpp	/^void Syn::init()$/;"	f	class:Syn
init_n	inc/Mn.h	/^	int init_n;$/;"	m	class:Mn
initialLF	src/Psat.cpp	/^void Psat::initialLF(){$/;"	f	class:Psat
inner	inc/Solver.h	/^  int inner;$/;"	m	class:Precond
innerStop	inc/Solver.h	/^  int innerStop;$/;"	m	class:Precond
inner_it_count	inc/Psat.h	/^	int inner_it_count;$/;"	m	class:Psat
internel	inc/Bus.h	/^	int *internel;$/;"	m	class:Bus
ipiv	inc/Psat.h	/^	int *ipiv;$/;"	m	class:Psat
is2	inc/Syn.h	/^	int *is2;$/;"	m	class:Syn
is2_n	inc/Syn.h	/^	int is2_n;$/;"	m	class:Syn
is3	inc/Syn.h	/^	int *is3;$/;"	m	class:Syn
is3_n	inc/Syn.h	/^	int is3_n;$/;"	m	class:Syn
is4	inc/Syn.h	/^	int *is4;$/;"	m	class:Syn
is4_n	inc/Syn.h	/^	int is4_n;$/;"	m	class:Syn
is51	inc/Syn.h	/^	int *is51;$/;"	m	class:Syn
is51_n	inc/Syn.h	/^	int is51_n;$/;"	m	class:Syn
is52	inc/Syn.h	/^	int *is52;$/;"	m	class:Syn
is52_n	inc/Syn.h	/^	int is52_n;$/;"	m	class:Syn
is53	inc/Syn.h	/^	int *is53;$/;"	m	class:Syn
is53_n	inc/Syn.h	/^	int is53_n;$/;"	m	class:Syn
is6	inc/Syn.h	/^	int *is6;$/;"	m	class:Syn
is6_n	inc/Syn.h	/^	int is6_n;$/;"	m	class:Syn
is8	inc/Syn.h	/^	int *is8;$/;"	m	class:Syn
is8_n	inc/Syn.h	/^	int is8_n;$/;"	m	class:Syn
isStatic	inc/settings.h	/^	int isStatic;$/;"	m	class:Settings
island	inc/Bus.h	/^	double *island;$/;"	m	class:Bus
island_n	inc/Bus.h	/^	int island_n;$/;"	m	class:Bus
iter	inc/settings.h	/^	int iter;$/;"	m	class:Settings
jay	inc/Psat.h	/^	complex<double> jay;$/;"	m	class:Psat
jay	inc/Syn.h	/^	complex<double> jay;$/;"	m	class:Syn
jfng	inc/Solver.h	/^  Jfng jfng;$/;"	m	class:Solver
kg	inc/DAE.h	/^	int kg;$/;"	m	class:DAE
last_num	inc/Solver.h	/^  int last_num;$/;"	m	class:Update
lfmit	inc/settings.h	/^	double lfmit;$/;"	m	class:Settings
lftime	inc/settings.h	/^	double lftime;$/;"	m	class:Settings
lftol	inc/settings.h	/^	double lftol;$/;"	m	class:Settings
line	inc/Psat.h	/^	Line line;$/;"	m	class:Psat
lineDelete	src/Line.cpp	/^void Line::lineDelete()$/;"	f	class:Line
local	inc/settings.h	/^	int local;$/;"	m	class:Settings
locksnap	inc/settings.h	/^	int locksnap;$/;"	m	class:Settings
main	src/main.cpp	/^int main()$/;"	f
max	inc/Psat.h	3;"	d
maxit	inc/Solver.h	/^  int maxit;$/;"	m	class:Gmres
maxit	inc/Solver.h	/^  int maxit;$/;"	m	class:Newton
maxnum	inc/Solver.h	/^  int maxnum;$/;"	m	class:Update
mesg	inc/Clpsat.h	/^	int mesg;$/;"	m	class:Clpsat
method	inc/Solver.h	/^  int method;$/;"	m	class:Newton
method	inc/settings.h	/^	int method;$/;"	m	class:Settings
min	inc/Psat.h	4;"	d
mn	inc/Psat.h	/^	Mn mn;$/;"	m	class:Psat
multiSteps	inc/Simu.h	/^  int multiSteps;$/;"	m	class:Simu
mv	inc/settings.h	/^	int mv;$/;"	m	class:Settings
mva	inc/settings.h	/^	double mva;$/;"	m	class:Settings
n	inc/BoundaryNode.h	/^	int n;$/;"	m	class:BoundaryNode
n	inc/Bus.h	/^	int n;$/;"	m	class:Bus
n	inc/DAE.h	/^	int n;$/;"	m	class:DAE
n	inc/Fault.h	/^	int n;$/;"	m	class:Fault
n	inc/Line.h	/^	int n;$/;"	m	class:Line
n	inc/Mn.h	/^	int n;$/;"	m	class:Mn
n	inc/PQ.h	/^	int n;$/;"	m	class:PQ
n	inc/PV.h	/^	int n;$/;"	m	class:PV
n	inc/SW.h	/^	int n;$/;"	m	class:SW
n	inc/Shunt.h	/^	int n;$/;"	m	class:Shunt
n	inc/Syn.h	/^	int n;$/;"	m	class:Syn
nBus	inc/Psat.h	/^	int nBus,nFault,nLine,nPQ,nPV,nSW,nSyn,nMn,nShunt;$/;"	m	class:Psat
nFault	inc/Psat.h	/^	int nBus,nFault,nLine,nPQ,nPV,nSW,nSyn,nMn,nShunt;$/;"	m	class:Psat
nLine	inc/Psat.h	/^	int nBus,nFault,nLine,nPQ,nPV,nSW,nSyn,nMn,nShunt;$/;"	m	class:Psat
nMn	inc/Psat.h	/^	int nBus,nFault,nLine,nPQ,nPV,nSW,nSyn,nMn,nShunt;$/;"	m	class:Psat
nPQ	inc/Psat.h	/^	int nBus,nFault,nLine,nPQ,nPV,nSW,nSyn,nMn,nShunt;$/;"	m	class:Psat
nPV	inc/Psat.h	/^	int nBus,nFault,nLine,nPQ,nPV,nSW,nSyn,nMn,nShunt;$/;"	m	class:Psat
nSW	inc/Psat.h	/^	int nBus,nFault,nLine,nPQ,nPV,nSW,nSyn,nMn,nShunt;$/;"	m	class:Psat
nShunt	inc/Psat.h	/^	int nBus,nFault,nLine,nPQ,nPV,nSW,nSyn,nMn,nShunt;$/;"	m	class:Psat
nSteps	inc/Simu.h	/^  int nSteps;$/;"	m	class:Simu
nSyn	inc/Psat.h	/^	int nBus,nFault,nLine,nPQ,nPV,nSW,nSyn,nMn,nShunt;$/;"	m	class:Psat
neval	inc/Simu.h	/^  int neval;$/;"	m	class:Simu
newton	inc/Solver.h	/^  Newton newton;$/;"	m	class:Jfng
newton_iteration	inc/Simu.h	/^  int newton_iteration;$/;"	m	class:Simu
nexttstep	inc/Psat.h	/^	double t_end,nexttstep;$/;"	m	class:Psat
nhis	inc/Record.h	/^  int nhis;$/;"	m	class:Record
norm	lib/myLib.cpp	/^double norm(int n,double *x){$/;"	f
npf	inc/DAE.h	/^	int npf;$/;"	m	class:DAE
nrecord	inc/Psat.h	/^	int nrecord;$/;"	m	class:Psat
num	inc/Solver.h	/^  int num;$/;"	m	class:Update
numOfStep	inc/Varout.h	/^	int numOfStep;$/;"	m	class:Varout
octave	inc/settings.h	/^	int octave;$/;"	m	class:Settings
ok	inc/settings.h	/^	int ok;$/;"	m	class:Settings
omega	inc/Syn.h	/^	double *omega;$/;"	m	class:Syn
omega_idx	inc/Syn.h	/^	int *omega_idx;$/;"	m	class:Syn
ord	inc/Syn.h	/^	int *ord;$/;"	m	class:Syn
outer	inc/Solver.h	/^  int outer;$/;"	m	class:Precond
outerStop	inc/Solver.h	/^  int outerStop;$/;"	m	class:Precond
pfsolver	inc/settings.h	/^	int pfsolver;$/;"	m	class:Settings
pi	src/Psat.cpp	2;"	d	file:
plot	inc/settings.h	/^	int plot;$/;"	m	class:Settings
plottype	inc/settings.h	/^	int plottype;$/;"	m	class:Settings
pm	inc/Syn.h	/^	double *pm;$/;"	m	class:Syn
pq	inc/PV.h	/^	double *pq;$/;"	m	class:PV
pq	inc/Psat.h	/^	PQ pq;$/;"	m	class:Psat
pq2z	inc/Clpsat.h	/^	int pq2z;$/;"	m	class:Clpsat
pq2z	inc/settings.h	/^	int pq2z;$/;"	m	class:Settings
pqDelete	src/PQ.cpp	/^void PQ::pqDelete()$/;"	f	class:PQ
pre_gmres	src/Psat.cpp	/^void Psat::pre_gmres(double *f0,double *xc,double *x){$/;"	f	class:Psat
precond	inc/Solver.h	/^  Precond precond;$/;"	m	class:Jfng
precondition	src/Psat.cpp	/^void Psat::precondition(double *x,int k){\/\/todo multiSteps$/;"	f	class:Psat
psid	inc/Syn.h	/^	double *psid;$/;"	m	class:Syn
psid_idx	inc/Syn.h	/^	int *psid_idx;$/;"	m	class:Syn
psiq	inc/Syn.h	/^	double *psiq;$/;"	m	class:Syn
psiq_idx	inc/Syn.h	/^	int *psiq_idx;$/;"	m	class:Syn
pv	inc/Psat.h	/^	PV pv;$/;"	m	class:Psat
pv2pq	inc/settings.h	/^	int pv2pq;$/;"	m	class:Settings
pvDelete	src/PV.cpp	/^void PV::pvDelete()$/;"	f	class:PV
rad	inc/settings.h	/^	double rad;$/;"	m	class:Settings
readfile	inc/Clpsat.h	/^	int readfile;$/;"	m	class:Clpsat
record	inc/Psat.h	/^	Record record;$/;"	m	class:Psat
red	inc/settings.h	/^	int red;$/;"	m	class:Settings
refbus	inc/settings.h	/^	int refbus;$/;"	m	class:Settings
refresh	inc/Clpsat.h	/^	int refresh;$/;"	m	class:Clpsat
refreshsim	inc/Clpsat.h	/^	int refreshsim;$/;"	m	class:Clpsat
reorth	inc/Solver.h	/^  int reorth;$/;"	m	class:Gmres
resetBoundNode	src/Psat.cpp	/^void Psat::resetBoundNode(){$/;"	f	class:Psat
s	inc/Solver.h	/^  double *s;$/;"	m	class:Gmres
settings	inc/Psat.h	/^	Settings settings;$/;"	m	class:Psat
show	inc/settings.h	/^	int show;$/;"	m	class:Settings
showlf	inc/settings.h	/^	int showlf;$/;"	m	class:Settings
showopf	inc/Clpsat.h	/^	int showopf;$/;"	m	class:Clpsat
shunt	inc/Psat.h	/^	Shunt shunt;$/;"	m	class:Psat
shuntvalues	inc/settings.h	/^	int shuntvalues;$/;"	m	class:Settings
simu	inc/Psat.h	/^	Simu simu;$/;"	m	class:Psat
solver	inc/Psat.h	/^	Solver solver;$/;"	m	class:Psat
solver_jfng	src/Psat.cpp	/^double * Psat::solver_jfng(double *x){$/;"	f	class:Psat
sort	lib/myLib.cpp	/^int* sort(int *s,int n)$/;"	f
sortD	lib/myLib.cpp	/^double* sortD(double *s,int n)$/;"	f
specifySystem	src/Psat.cpp	/^void Psat::specifySystem(){$/;"	f	class:Psat
step	inc/Psat.h	/^	double *step;$/;"	m	class:Psat
store	inc/Mn.h	/^	double **store;$/;"	m	class:Mn
store	inc/PQ.h	/^	double **store;$/;"	m	class:PQ
store	inc/PV.h	/^	double **store;$/;"	m	class:PV
sw	inc/Psat.h	/^	SW sw;$/;"	m	class:Psat
swDelete	src/SW.cpp	/^void SW::swDelete()$/;"	f	class:SW
syn	inc/Psat.h	/^	Syn syn;$/;"	m	class:Psat
synDelete	src/Syn.cpp	/^void Syn::synDelete()$/;"	f	class:Syn
t	inc/DAE.h	/^	double t;$/;"	m	class:DAE
t	inc/Record.h	/^  double *t;$/;"	m	class:Record
t	inc/Varout.h	/^	double *t;$/;"	m	class:Varout
t0	inc/settings.h	/^	double t0;$/;"	m	class:Settings
tFaultEnd	inc/Fault.h	/^	double tFaultEnd;$/;"	m	class:Fault
tFaultStart	inc/Fault.h	/^	double tFaultStart;$/;"	m	class:Fault
tStep	inc/Simu.h	/^  double tStep;$/;"	m	class:Simu
t_cur	inc/Simu.h	/^  double t_cur;$/;"	m	class:Simu
t_end	inc/Psat.h	/^	double t_end,nexttstep;$/;"	m	class:Psat
t_end	inc/Simu.h	/^  double t_end;$/;"	m	class:Simu
t_next	inc/Simu.h	/^  double t_next;$/;"	m	class:Simu
t_start	inc/Simu.h	/^  double t_start;$/;"	m	class:Simu
t_switch	inc/Simu.h	/^  double *t_switch;$/;"	m	class:Simu
tempi	inc/settings.h	/^	double *tempi;$/;"	m	class:Settings
tf	inc/settings.h	/^	double tf;$/;"	m	class:Settings
tn	inc/DAE.h	/^	double *tn;$/;"	m	class:DAE
to	inc/Line.h	/^	int *to;$/;"	m	class:Line
tol	inc/Solver.h	/^  double tol;$/;"	m	class:Gmres
tol	inc/Solver.h	/^  double tol;$/;"	m	class:Newton
tol1	lib/myLib.h	10;"	d
tol_fixed	inc/Solver.h	/^  double tol_fixed;$/;"	m	class:Gmres
tstep	inc/settings.h	/^	double tstep;$/;"	m	class:Settings
update	inc/Solver.h	/^  Update update;$/;"	m	class:Solver
updatePreconditioner	src/Psat.cpp	/^void Psat::updatePreconditioner(int iFlag){$/;"	f	class:Psat
v	inc/Solver.h	/^  double *v;$/;"	m	class:Gmres
varout	inc/Psat.h	/^	Varout varout;$/;"	m	class:Psat
vf	inc/Syn.h	/^	double *vf;$/;"	m	class:Syn
viewrep	inc/Clpsat.h	/^	int viewrep;$/;"	m	class:Clpsat
violations	inc/settings.h	/^	int violations;$/;"	m	class:Settings
vs	inc/settings.h	/^	int vs;$/;"	m	class:Settings
x	inc/DAE.h	/^	double *x;$/;"	m	class:DAE
x	inc/Record.h	/^  double *x;$/;"	m	class:Record
x	inc/Varout.h	/^	double *x;$/;"	m	class:Varout
z	inc/Solver.h	/^  double *z;$/;"	m	class:Gmres
zoom	inc/settings.h	/^	int zoom;$/;"	m	class:Settings
~BoundaryNode	src/BoundaryNode.cpp	/^BoundaryNode::~BoundaryNode()$/;"	f	class:BoundaryNode
~Bus	src/Bus.cpp	/^Bus::~Bus()$/;"	f	class:Bus
~DAE	src/DAE.cpp	/^DAE::~DAE()$/;"	f	class:DAE
~Fault	src/Fault.cpp	/^Fault::~Fault(){$/;"	f	class:Fault
~Line	src/Line.cpp	/^Line::~Line()$/;"	f	class:Line
~PQ	src/PQ.cpp	/^PQ::~PQ()$/;"	f	class:PQ
~PV	src/PV.cpp	/^PV::~PV()$/;"	f	class:PV
~Psat	src/Psat.cpp	/^Psat::~Psat(){$/;"	f	class:Psat
~SW	src/SW.cpp	/^SW::~SW()$/;"	f	class:SW
~Settings	src/Settings.cpp	/^Settings::~Settings()$/;"	f	class:Settings
~Syn	src/Syn.cpp	/^Syn::~Syn(){$/;"	f	class:Syn
~Varout	src/Varout.cpp	/^Varout::~Varout(){$/;"	f	class:Varout
